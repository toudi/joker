env:
  redis_port: 5555
  data_dir: /Users/toudi/joker/services/
  postgres:
    bindir: /opt/homebrew/bin
    username: django-app
    password: test
    dbname: example-db
    port: 2222
services:
  dummy:
    command: echo {{ env.data_dir }}
    no-liveness-check: true
  go-svc:
    dir: "{{ env.data_dir }}/go-app"
    depends:
      - django-app
    bootstrap: go mod tidy
    command:
      - go build -o demo
      - ./demo
    cleanup: rm -f demo
    hot-reload: true
  redis:
    command: redis-server --port {{ env.redis_port }}
  django-app:
    depends:
      - redis
      - postgres
    bootstrap:
      env:
        DJANGO_SUPERUSER_PASSWORD: test
      commands:
        - python3 -m venv .env
        - mkdir envs
        - '{{ env.postgres.bindir }}/psql -p {{ env.postgres.port }} postgres -c "CREATE ROLE \"{{ env.postgres.username }}\" WITH LOGIN PASSWORD ''{{ env.postgres.password }}''"'
        - '{{ env.postgres.bindir }}/psql -p {{ env.postgres.port }} postgres -c "CREATE DATABASE \"{{ env.postgres.dbname }}\" WITH OWNER \"{{ env.postgres.username }}\""'
        - echo "postgres://{{ env.postgres.username }}:{{ env.postgres.password }}@127.0.0.1:{{ env.postgres.port }}/{{ env.postgres.dbname }}" > envs/DATABASE_URL
        - source .env/bin/activate
        - pip install -r requirements.txt
        - envdir envs python manage.py migrate
        - envdir envs python manage.py createsuperuser --username test --noinput --email test@example.com
    command:
      - source .env/bin/activate
      - envdir envs python manage.py migrate
      - envdir envs python manage.py runserver
    cleanup:
      - rm -rf .env envs
  postgres:
    bootstrap:
      - "{{ env.postgres.bindir }}/pg_ctl initdb -D {{ service.data_dir }}"
      - sed -in 's/#port = 5432/port = {{ env.postgres.port }}/' {{ env.data_dir }}/postgres/postgresql.conf
    command: "{{ env.postgres.bindir }}/postgres -D {{ service.data_dir }}"
    cleanup:
      - rm -rf {{ service.data_dir }}
commands:
  backup-db:
    - "stop -signal=INT postgres"
    - rsync -a {{ env.data_dir }}/postgres/ {{ env.data_dir }}/postgres-backup
    - "start postgres"
  restore-db:
    - rsync -a {{ env.data_dir }}/postgres-backup/ {{ services.postgres.data_dir }}
